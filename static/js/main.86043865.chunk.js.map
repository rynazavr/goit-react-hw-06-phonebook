{"version":3,"sources":["Components/Phonebook/Phonebook.module.css","Components/ContactList/Fade.module.css","Components/AlertMessage/AlertMessage.module.css","Components/Filter/Filter.module.css","redux/actions/changeContactAction.js","redux/constants/contactListConstant.js","redux/reducers/changeContactReducer.js","redux/reducers/index.js","redux/store.js","Components/AlertMessage/AlertMessage.js","Components/ContactForm/ContactForm.js","Components/SingleContact/SingleContact.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","Components/Phonebook/Phonebook.js","App.js","index.js","Components/ContactList/ContactList.module.css","Components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","contactStorage","handleFilter","target","value","items","createReducer","state","filter","contact","combineReducers","store","configureStore","reducer","contacts","rootReducer","devTools","process","AlertMessage","className","styles","alertCover","alertText","ContactForm","formInitialState","alert","inputHandler","setState","submitHandler","e","preventDefault","props","find","toggleAlert","reset","status","this","CSSTransition","in","classNames","timeout","unmountOnExit","onEntered","block","form","autoComplete","onSubmit","label","input","type","placeholder","onChange","button","Component","mapDispatchToProps","connect","ownProps","dispatch","fade","ulBlock","li","span","onClick","normalizedFilter","toLowerCase","includes","TransitionGroup","component","liCover","map","key","Phonebook","savedContacts","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","appear","mountOnExit","blue","length","headersmall","warningstyle","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.86043865.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"Phonebook_appear__1zh8H\",\"appearActive\":\"Phonebook_appearActive__3ie--\",\"blue\":\"Phonebook_blue__3Ninm\",\"headersmall\":\"Phonebook_headersmall__VrKm7\",\"warningstyle\":\"Phonebook_warningstyle__bs9Aa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"Fade_enter__CFqCV\",\"enterActive\":\"Fade_enterActive__oIyLz\",\"exit\":\"Fade_exit__2RMsK\",\"exitActive\":\"Fade_exitActive__2NloE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alertCover\":\"AlertMessage_alertCover__gJB6U\",\"alertText\":\"AlertMessage_alertText__1XJLQ\",\"alertBtn\":\"AlertMessage_alertBtn__knZEA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2ExLO\",\"input\":\"Filter_input__154gU\"};","import { createAction } from \"@reduxjs/toolkit\";\r\nimport shortid from \"shortid\";\r\nimport {\r\n  ADD_CONTACT,\r\n  REMOVE_CONTACT,\r\n  CONTACT_STORAGE,\r\n  CONTACT_FILTER,\r\n} from \"../constants/contactListConstant.js\";\r\n\r\nexport const addContact = createAction(ADD_CONTACT, (name, number) => ({\r\n  payload: {\r\n    id: shortid.generate(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\nexport const deleteContact = createAction(REMOVE_CONTACT);\r\nexport const contactStorage = createAction(CONTACT_STORAGE);\r\nexport const handleFilter = createAction(CONTACT_FILTER, ({ target }) => ({\r\n  payload: target.value,\r\n}));\r\n","export const ADD_CONTACT = \"@contacts/add\";\r\nexport const REMOVE_CONTACT = \"@contact/delete\";\r\nexport const CONTACT_STORAGE = \"@contact/storage\";\r\nexport const CONTACT_FILTER = \"@contact/filter\";\r\n\r\n//form\r\n\r\nexport const INPUT_CHANGE = \"@input/change\";\r\nexport const INPUT_RESET = \"@input/reset\";\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  addContact,\r\n  deleteContact,\r\n  contactStorage,\r\n  handleFilter,\r\n} from \"../actions/changeContactAction\";\r\n\r\nconst removeContact = (state, { payload }) =>\r\n  state.filter((contact) => contact.id !== payload);\r\n\r\nexport const items = createReducer([], {\r\n  [addContact]: (state, { payload }) => [...state, payload],\r\n  [deleteContact]: removeContact,\r\n  [contactStorage]: (state, { payload }) => payload,\r\n});\r\n\r\nexport const filter = createReducer(\"\", {\r\n  [handleFilter]: (state, { payload }) => (state = payload),\r\n});\r\n","import { combineReducers } from \"redux\";\r\nimport { items, filter } from \"./changeContactReducer\";\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","// import { createStore } from \"redux\";\r\n// import { composeWithDevTools } from \"redux-devtools-extension\";\r\n// import rootReducer from \"./reducers\";\r\n\r\n// const store = createStore(rootReducer, composeWithDevTools());\r\n\r\n// export default store;\r\n\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst store = configureStore({\r\n  reducer: { contacts: rootReducer },\r\n  devTools: process.env.NODE_ENV !== \"production\",\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport styles from \"./AlertMessage.module.css\";\r\n\r\nconst AlertMessage = () => {\r\n  return (\r\n    <div className={styles.alertCover}>\r\n      <p className={styles.alertText}>Contact is already in list!</p>\r\n    </div>\r\n  );\r\n};\r\nexport default AlertMessage;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport PropTypes from \"prop-types\";\r\nimport { addContact } from \"../../redux/actions/changeContactAction\";\r\nimport styles from \"./ContactForm.module.css\";\r\nimport AlertMessage from \"../AlertMessage/AlertMessage\";\r\n\r\nclass ContactForm extends Component {\r\n  formInitialState = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  state = {\r\n    ...this.formInitialState,\r\n    alert: false,\r\n  };\r\n\r\n  inputHandler = ({ target }) => {\r\n    const { value, name } = target;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  submitHandler = (e) => {\r\n    const { name, number, alert } = this.state;\r\n    e.preventDefault();\r\n\r\n    const { contacts } = this.props;\r\n    const isExists = contacts.find((contact) => contact.name === name);\r\n\r\n    if (isExists) {\r\n      this.toggleAlert(alert);\r\n      return this.reset();\r\n    }\r\n\r\n    this.props.addContact(name, number);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ ...this.formInitialState });\r\n  };\r\n\r\n  toggleAlert = (status) => {\r\n    this.setState({ alert: !status });\r\n  };\r\n\r\n  render() {\r\n    const { name, number, alert } = this.state;\r\n    const noAlert = () => this.setState({ alert: !alert });\r\n\r\n    return (\r\n      <>\r\n        <CSSTransition\r\n          in={alert}\r\n          classNames=\"Alert\"\r\n          timeout={1500}\r\n          unmountOnExit\r\n          onEntered={noAlert}\r\n        >\r\n          <AlertMessage />\r\n        </CSSTransition>\r\n\r\n        <div className={styles.block}>\r\n          <form\r\n            className={styles.form}\r\n            autoComplete=\"off\"\r\n            onSubmit={this.submitHandler}\r\n          >\r\n            <label className={styles.label}>\r\n              Name:\r\n              <input\r\n                className={styles.input}\r\n                type=\"text\"\r\n                name=\"name\"\r\n                placeholder=\"Your Name\"\r\n                value={name}\r\n                onChange={this.inputHandler}\r\n              />\r\n            </label>\r\n\r\n            <label className={styles.label}>\r\n              Number:\r\n              <input\r\n                className={styles.input}\r\n                type=\"tel\"\r\n                name=\"number\"\r\n                placeholder=\"Your Number\"\r\n                value={number}\r\n                onChange={this.inputHandler}\r\n              />\r\n            </label>\r\n\r\n            <button type=\"submit\" className={styles.button}>\r\n              Add contact\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: state.contacts.items,\r\n  filter: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  addContact,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n\r\nContactForm.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string,\r\n      id: PropTypes.string,\r\n      number: PropTypes.string,\r\n    })\r\n  ).isRequired,\r\n  filter: PropTypes.string.isRequired,\r\n  addContact: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { deleteContact } from \"../../redux/actions/changeContactAction\";\r\nimport styles from \"../ContactList/ContactList.module.css\";\r\nimport fade from \"../ContactList/Fade.module.css\";\r\n\r\nconst SingleContact = ({ name, number, deleteContact }) => {\r\n  return (\r\n    <CSSTransition timeout={800} classNames={fade}>\r\n      <ul className={styles.ulBlock}>\r\n        <li className={styles.li}>\r\n          <span className={styles.span}>{name}</span>\r\n          <span className={styles.span}>{number}</span>\r\n        </li>\r\n        <button className={styles.button} type=\"button\" onClick={deleteContact}>\r\n          Delete\r\n        </button>\r\n      </ul>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const contact = state.contacts.items.find(\r\n    (contact) => contact.id === ownProps.id\r\n  );\r\n\r\n  return { ...contact };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n  deleteContact: () => dispatch(deleteContact(ownProps.id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SingleContact);\r\n\r\nSingleContact.propTypes = {\r\n  name: PropTypes.string,\r\n  id: PropTypes.string.isRequired,\r\n  number: PropTypes.string,\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport PropTypes from \"prop-types\";\r\nimport fade from \"./Fade.module.css\";\r\nimport styles from \"./ContactList.module.css\";\r\nimport SingleContact from \"../SingleContact/SingleContact\";\r\n\r\nconst ContactList = ({ contacts }) => {\r\n  return (\r\n    <ul className={styles.block}>\r\n      <TransitionGroup component=\"li\" className={styles.liCover}>\r\n        {contacts.map(({ id }) => (\r\n          <CSSTransition key={id} classNames={fade} timeout={800}>\r\n            <SingleContact id={id} />\r\n          </CSSTransition>\r\n        ))}\r\n      </TransitionGroup>\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { items, filter } = state.contacts;\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  const getFilteredContact = items.filter((contact) =>\r\n    contact.name.toLowerCase().includes(normalizedFilter)\r\n  );\r\n\r\n  return {\r\n    contacts: getFilteredContact,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ContactList);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string,\r\n      id: PropTypes.string,\r\n      namber: PropTypes.string,\r\n    })\r\n  ).isRequired,\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { handleFilter } from \"../../redux/actions/changeContactAction\";\r\nimport styles from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ filter, handleFilter }) => {\r\n  return (\r\n    <div>\r\n      <label className={styles.label}>\r\n        Find contacts by name\r\n        <input\r\n          className={styles.input}\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          placeholder=\"Type contact name\"\r\n          value={filter}\r\n          onChange={handleFilter}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  filter: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  handleFilter,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n\r\nFilter.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string,\r\n      id: PropTypes.string,\r\n      number: PropTypes.string,\r\n    }).isRequired\r\n  ),\r\n  filter: PropTypes.string.isRequired,\r\n  handleFilter: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport styles from \"./Phonebook.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { contactStorage } from \"../../redux/actions/changeContactAction\";\r\nimport ContactForm from \"../ContactForm/ContactForm\";\r\nimport ContactList from \"../ContactList/ContactList\";\r\nimport Filter from \"../Filter/Filter\";\r\n\r\nclass Phonebook extends Component {\r\n  componentDidMount() {\r\n    const savedContacts = localStorage.getItem(\"contacts\");\r\n    if (savedContacts) {\r\n      this.props.contactStorage(JSON.parse(savedContacts));\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { contacts } = this.props;\r\n    if (prevProps.contacts !== contacts) {\r\n      localStorage.setItem(\"contacts\", JSON.stringify(contacts));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <CSSTransition\r\n          in={true}\r\n          appear={true}\r\n          timeout={260}\r\n          classNames={styles}\r\n          mountOnExit\r\n        >\r\n          <h1 className={styles.blue}>Phonebook</h1>\r\n        </CSSTransition>\r\n        <ContactForm />\r\n\r\n        {this.props.contacts.length === 0 && (\r\n          <>\r\n            <h2 className={styles.headersmall}>Contacts</h2>\r\n            <p className={styles.warningstyle}>\r\n              No contacts in your contact list. Please, create a new cotnact!\r\n            </p>\r\n          </>\r\n        )}\r\n        <Filter />\r\n        <ContactList />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: state.contacts.items,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  contactStorage,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Phonebook);\r\n","import React from \"react\";\nimport Phonebook from \"./Components/Phonebook/Phonebook\";\n\nconst App = () => {\n  return (\n    <div>\n      <Phonebook />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store.js\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"ContactList_block__19X7Z\",\"form\":\"ContactList_form__1umgv\",\"label\":\"ContactList_label__18hgz\",\"input\":\"ContactList_input__162Ui\",\"button\":\"ContactList_button__uWvmX\",\"ulBlock\":\"ContactList_ulBlock__1ZIoe\",\"li\":\"ContactList_li__3z3A6\",\"span\":\"ContactList_span__3IzgY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"ContactForm_block__3nruP\",\"form\":\"ContactForm_form__1QTpA\",\"label\":\"ContactForm_label__2OfkF\",\"input\":\"ContactForm_input__3Vc9Y\",\"button\":\"ContactForm_button__1VB5l\"};"],"sourceRoot":""}